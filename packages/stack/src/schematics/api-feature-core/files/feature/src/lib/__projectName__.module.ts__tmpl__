import { GraphQLIntercomModule } from '@kikstart-playground/graphql-intercom'
import { Module } from '@nestjs/common'
import { GraphQLModule } from '@nestjs/graphql'
import { PubSub } from 'graphql-subscriptions'
import { join } from 'path'
import { <%= classify(appName) %>AuthFeatureModule } from '@<%= npmScope %>/<%= appName %>/auth/feature'
import { <%= classify(appName) %>UserFeatureModule } from '@<%= npmScope %>/<%= appName %>/user/feature'

import { <%= classify(projectName) %>Controller } from './<%= projectName %>.controller'
import { <%= classify(projectName) %>Resolver } from './<%= projectName %>.resolver'
import { <%= classify(projectName) %>Service } from './<%= projectName %>.service'

@Module({
  imports: [
    GraphQLModule.forRoot({
      autoSchemaFile: join(process.cwd(), '<%= appName %>-schema.graphql'),
      context: ({ req, res }) => ({ req, res }),
      installSubscriptionHandlers: true,
      playground: {
        settings: {
          'request.credentials': 'include',
        },
      },
      sortSchema: true,
    }),
    GraphQLIntercomModule.forRoot({ pubSub: new PubSub() }),
    <%= classify(appName) %>AuthFeatureModule,
    <%= classify(appName) %>UserFeatureModule,
  ],
  controllers: [<%= classify(projectName) %>Controller],
  providers: [<%= classify(projectName) %>Resolver, <%= classify(projectName) %>Service],
  exports: [<%= classify(projectName) %>Service],
})
export class <%= classify(projectName) %>Module {}
